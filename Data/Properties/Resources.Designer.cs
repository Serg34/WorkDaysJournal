//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Furmanov.Data.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Furmanov.Data.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare @payId int = 69;
        ///--declare @year int = 2019;
        ///--declare @month int = 1;
        ///--declare @day int = 1;
        ///
        ///delete WorkedDay 
        ///where SalaryPay_Id = @payId
        ///	and Year(Date) = @year
        ///	and Month(Date) = @month
        ///	and Day(Date) in (@day)
        ///.
        /// </summary>
        internal static string DeleteWorkDay {
            get {
                return ResourceManager.GetString("DeleteWorkDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare @payId int = 69;
        ///--declare @day DateTime = Cast(&apos;20191015&apos; as DateTime);
        ///
        ///if not exists (select * from WorkedDay 
        ///				where SalaryPay_Id = @payId
        ///					and Cast(Date as Date) = Cast(@day as Date))
        ///
        ///insert WorkedDay (SalaryPay_Id, Date)
        ///values (@payId, @day)
        ///.
        /// </summary>
        internal static string InsertWorkDay {
            get {
                return ResourceManager.GetString("InsertWorkDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare @payId int = 562794;
        ///
        ///select pay.*,
        ///	2 Type, 
        ///	&apos;Salary &apos; + CAST(pay.Id AS nvarchar) ViewModelId,
        ///	&apos;Object &apos; + CAST(obj.Id AS nvarchar) ParentId,
        ///	emp.Name Name,
        ///	emp.Position Position,
        ///	emp.Phone Phone,
        ///	emp.Salary Salary
        ///from SalaryPay pay
        ///	left join [Object] obj on pay.Object_Id = obj.Id
        ///	left join Employee emp on emp.Id = pay.Employee_Id
        ///where pay.Id = @payId
        ///.
        /// </summary>
        internal static string SalaryPay {
            get {
                return ResourceManager.GetString("SalaryPay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare @userId int = 1003;
        ///--declare @year int = 2019;
        ///--declare @month int = 8;
        ///
        ///with pays as (
        ///	 select pay.Id,
        ///		2 Type, 
        ///		&apos;Salary &apos; + CAST(pay.Id AS nvarchar) ViewModelId,
        ///		&apos;Object &apos; + CAST(obj.Id AS nvarchar) ParentId,
        ///		@year Year,
        ///		@month Month,
        ///		1 EmployeeCount,
        ///		obj.Id Object_Id,
        ///		obj.Manager_Id Manager_Id,
        ///		emp.Id Employee_Id,
        ///		emp.Name Name,
        ///		emp.Position Position,
        ///		emp.Phone Phone,
        ///		emp.Salary Salary,
        ///		pay.RateDays RateDays,
        ///		pay.FactDays FactDays,
        ///		pay.Adva [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SalaryPaysForManager {
            get {
                return ResourceManager.GetString("SalaryPaysForManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare @userId int = 1027;
        ///--declare @year int = 2019;
        ///--declare @month int = 4;
        ///
        ///with pays as (
        ///	 select pay.Id,
        ///		2 Type, 
        ///		&apos;Salary &apos; + CAST(pay.Id as nvarchar) ViewModelId,
        ///		&apos;Object &apos; + CAST(obj.Id as nvarchar) ParentId,
        ///		pr.Id Project_Id,
        ///		obj.Id Object_Id,
        ///		obj.Manager_Id Manager_Id,
        ///		emp.Id Employee_Id,
        ///		@year Year,
        ///		@month Month,
        ///		0 ObjectCount,
        ///		1 EmployeeCount,
        ///		emp.Name Name,
        ///		emp.Position Position,
        ///		emp.Phone Phone,
        ///		emp.Salary Salary,
        ///		pay.RateDays RateDays [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SalaryPaysForProjectManager {
            get {
                return ResourceManager.GetString("SalaryPaysForProjectManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare @login nvarchar(50) = &apos;User1&apos;;
        ///--declare @password nvarchar(50) = &apos;123&apos;;
        ///
        ///select 
        ///	u.*,
        ///	Role.Name RoleName
        ///from [User] u
        ///	left join Role
        ///		on u.Role_Id = Role.Id
        ///where Login = @login
        ///	and Password = @password
        ///.
        /// </summary>
        internal static string User {
            get {
                return ResourceManager.GetString("User", resourceCulture);
            }
        }
    }
}
