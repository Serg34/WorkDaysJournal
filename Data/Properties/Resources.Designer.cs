//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Furmanov.Data.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Furmanov.Data.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --DEBUG
        ///--declare @payId int = 69;
        ///--declare @day DateTime = Cast(&apos;20191015&apos; as DateTime);
        ///
        ///delete WorkedDay 
        ///where SalaryPayId = @payId
        ///	and Cast(Date as Date) = Cast(@day as Date)
        ///.
        /// </summary>
        internal static string DeleteWorkDay {
            get {
                return ResourceManager.GetString("DeleteWorkDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --DEBUG
        ///--declare @payId int = 69;
        ///--declare @day DateTime = Cast(&apos;20191015&apos; as DateTime);
        ///
        ///if not exists (select * from WorkedDay 
        ///				where SalaryPayId = @payId
        ///					and Cast(Date as Date) = Cast(@day as Date))
        ///
        ///insert WorkedDay (SalaryPayId, Date)
        ///values (@payId, @day)
        ///.
        /// </summary>
        internal static string InsertWorkDay {
            get {
                return ResourceManager.GetString("InsertWorkDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --DEBUG
        ///--declare @userId int = 66;
        ///--declare @userId int = 9;
        ///
        ///if (select Role_Id from [User] where Id = @userId) = 4
        ///	select o.*
        ///	from Object o
        ///		left Join Project p
        ///			on o.Project_Id = p.Id
        ///	where p.Rukovod_Id = @userId
        ///
        ///else select	o.*
        ///	from Object o
        ///	where o.Manager_Id = @userId
        ///.
        /// </summary>
        internal static string ObjectsForManager {
            get {
                return ResourceManager.GetString("ObjectsForManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --DEBUG
        ///--declare @userId int = 9;
        ///--declare @year int = 2020;
        ///--declare @month int = 4;
        ///
        ///with objs as (
        ///	select -1 Id,
        ///		1 Type,
        ///		&apos;Object &apos; + CAST(obj.Id AS nvarchar) ViewModelId,
        ///		null ParentId,
        ///		obj.Id ObjectId,
        ///		obj.Address ObjectNameForSalaryPay,
        ///		obj.ManagerId ManagerId,
        ///		null PositionId,
        ///		null EmployeeId,
        ///		obj.Address Name,
        ///		&apos;Выплат: &apos; + CAST(Count(sal.Id) AS nvarchar) Phone,
        ///		null PositionName,
        ///		SUM(norm.Salary) Salary,
        ///		SUM(sal.RateDays) RateDays,
        ///		SUM(sal.FactDays) [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SalaryPayForManager {
            get {
                return ResourceManager.GetString("SalaryPayForManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --DEBUG
        ///--declare @userId int = 63;
        ///--declare @year int = 2020;
        ///--declare @month int = 4;
        ///
        ///with projects as(
        ///	 select -2 Id,
        ///		 0 Type,
        ///		 &apos;Project &apos; + CAST(pr.Id AS nvarchar) ViewModelId,
        ///		 null ParentId,
        ///		 null ObjectId,
        ///		 null ManagerId,
        ///		 null PositionId,
        ///		 null EmployeeId,
        ///		 pr.Name Name,
        ///		 &apos;Выплат: &apos; + CAST(Count(sal.Id) AS nvarchar) Phone,
        ///		 &apos;Объектов: &apos; + CAST((select Count(*) 
        ///							  from Object 
        ///							  where ProjectId = pr.ID and IsDeleted = 0) 
        ///							  AS nvarchar) [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SalaryPayForProjectManager {
            get {
                return ResourceManager.GetString("SalaryPayForProjectManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --DEBUG
        ///--declare @login nvarchar(50) = &apos;User1&apos;;
        ///--declare @password nvarchar(50) = &apos;123&apos;;
        ///
        ///select 
        ///	u.Id,
        ///	u.Login,
        ///	u.Password,
        ///	u.Name,
        ///	u.RoleId,
        ///	Role.Name RoleName
        ///from [User] u
        ///	left join Role
        ///		on u.RoleId = Role.Id
        ///where Login = @login
        ///	and Password = @password
        ///.
        /// </summary>
        internal static string User {
            get {
                return ResourceManager.GetString("User", resourceCulture);
            }
        }
    }
}
