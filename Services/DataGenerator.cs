using Furmanov.Data;
using Furmanov.Data.Data;
using LinqToDB;
using LinqToDB.Data;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace Furmanov.Services
{
	public class DataGenerator
	{
		#region Fields
		private readonly Random _rnd = new Random();

		private static readonly string[] Names =
		{
			"Абрам",
			"Аваз",
			"Август",
			"Авдей",
			"Автандил",
			"Адам",
			"Адис",
			"Адольф",
			"Адриан",
			"Азарий",
			"Аким",
			"Александр",
			"Алексей",
			"Альберт",
			"Альфред",
			"Амадей",
			"Амадеус",
			"Амаяк",
			"Анатолий",
			"Ангел",
			"Андоим",
			"Андрей",
			"Аникита",
			"Антон",
			"Арам",
			"Арий",
			"Аристарх",
			"Аркадий",
			"Арно",
			"Арнольд",
			"Арон",
			"Арсен",
			"Артем",
			"Артемий",
			"Артур",
			"Архип",
			"Аскольд",
			"Афанасий",
			"Ахмет",
			"Ашот",
			"Бенедикт",
			"Берек",
			"Бернар",
			"Богдан",
			"Боголюб",
			"Болеслав",
			"Бонифаций",
			"Борис",
			"Борислав",
			"Боян",
			"Бронислав",
			"Бруно",
			"Вадим",
			"Валентин",
			"Валерий",
			"Вальтер",
			"Василий",
			"Велизар",
			"Венедикт",
			"Вениамин",
			"Виктор",
			"Вилен",
			"Вилли",
			"Вильгельм",
			"Виссарион",
			"Виталий",
			"Витаутас",
			"Витольд",
			"Владимир",
			"Владислав",
			"Владлен",
			"Володар",
			"Вольдемар",
			"Всеволод",
			"Вячеслав",
			"Гавриил",
			"Гарри",
			"Гастон",
			"Геннадий",
			"Генрих",
			"Георгий",
			"Геральд",
			"Герасим",
			"Герман",
			"Глеб",
			"Гордей",
			"Гордон",
			"Градимир",
			"Григорий",
			"Гурий",
			"Даниил",
			"Денис",
			"Джордан",
			"Дмитрий",
			"Дональд",
			"Донат",
			"Донатос",
			"Дорофей",
			"Евгений",
			"Евграф",
			"Евдоким",
			"Евстафий",
			"Егор",
			"Елизар",
			"Елисей",
			"Емельян",
			"Ермолай",
			"Ерофей",
			"Ефим",
			"Ефимий",
			"Ефрем",
			"Ждан",
			"Жорж",
			"Захар",
			"Захария",
			"Зигмунд",
			"Зиновий",
			"Ибрагим",
			"Иван",
			"Игорь",
			"Измаил",
			"Израиль",
			"Илиан",
			"Илларион",
			"Илья",
			"Иннокентий",
			"Иосиф",
			"Ираклий",
			"Иржи",
			"Исай",
			"Казимир",
			"Карен",
			"Карл",
			"Кирилл",
			"Клавдий",
			"Клемент",
			"Клод",
			"Кондрат",
			"Конкордий",
			"Константин",
			"Кузьма",
			"Лазарь",
			"Леван",
			"Леонард",
			"Леонид",
			"Леонтий",
			"Леопольд",
			"Лука",
			"Любомир",
			"Людвиг",
			"Люсьен",
			"Мадлен",
			"Макар",
			"Максим",
			"Максимилиан",
			"Мануил",
			"Марат",
			"Мариан",
			"Марк",
			"Матвей",
			"Мераб",
			"Милан",
			"Мирон",
			"Мирослав",
			"Михаил",
			"Мичлов",
			"Модест",
			"Моисей",
			"Мурат",
			"Муслим",
			"Назар",
			"Назарий",
			"Натан",
			"Наум",
			"Никита",
			"Никифор",
			"Николай",
			"Никон",
			"Нисон",
			"Нифонт",
			"Олан",
			"Олег",
			"Олесь",
			"Онисим",
			"Орест",
			"Осип",
			"Оскар",
			"Павел",
			"Парамон",
			"Петр",
			"Платон",
			"Порфирий",
			"Прохор",
			"Равиль",
			"Радомир",
			"Раис",
			"Раймонд",
			"Ратмир",
			"Рафаил",
			"Рафик",
			"Рашид",
			"Ренольд",
			"Рифат",
			"Ричард",
			"Роберт",
			"Родион",
			"Ролан",
			"Роман",
			"Ростислав",
			"Рубен",
			"Рудольф",
			"Руслан",
			"Рустам",
			"Савва",
			"Самсон",
			"Святослав",
			"Севастьян",
			"Северин",
			"Семен",
			"Серафим",
			"Сергей",
			"Сократ",
			"Соломон",
			"Спартак",
			"Стакрат",
			"Станислав",
			"Степан",
			"Стивен",
			"Стоян",
			"Таис",
			"Талик",
			"Тамаз",
			"Тарас",
			"Тельман",
			"Теодор",
			"Терентий",
			"Тибор",
			"Тигран",
			"Тигрий",
			"Тимофей",
			"Тимур",
			"Тихон",
			"Трифон",
			"Трофим",
			"Ульманас",
			"Устин",
			"Фаддей",
			"Федор",
			"Феликс",
			"Феодосий",
			"Фидель",
			"Филимон",
			"Филипп",
			"Флорентий",
			"Фома",
			"Франц",
			"Фридрих",
			"Харитон",
			"Христиан",
			"Христос",
			"Христофор",
			"Эдвард",
			"Эдуард",
			"Эльдар",
			"Эмиль",
			"Эммануил",
			"Эраст",
			"Эрик",
			"Эрнест",
			"Юлиан",
			"Юрий",
			"Юхим",
			"Яким",
			"Яков",
			"Яромир",
			"Ярослав",
			"Ясон",
		};
		private static readonly string[] Surnames =
		{
			"Смирнов",
			"Иванов",
			"Кузнецов",
			"Соколов",
			"Попов",
			"Лебедев",
			"Козлов",
			"Новиков",
			"Морозов",
			"Петров",
			"Волков",
			"Соловьёв",
			"Васильев",
			"Зайцев",
			"Павлов",
			"Семёнов",
			"Голубев",
			"Виноградов",
			"Богданов",
			"Воробьёв",
			"Фёдоров",
			"Михайлов",
			"Беляев",
			"Тарасов",
			"Белов",
			"Комаров",
			"Орлов",
			"Киселёв",
			"Макаров",
			"Андреев",
			"Ковалёв",
			"Ильин",
			"Гусев",
			"Титов",
			"Кузьмин",
			"Кудрявцев",
			"Баранов",
			"Куликов",
			"Алексеев",
			"Степанов",
			"Яковлев",
			"Сорокин",
			"Сергеев",
			"Романов",
			"Захаров",
			"Борисов",
			"Королёв",
			"Герасимов",
			"Пономарёв",
			"Григорьев",
			"Лазарев",
			"Медведев",
			"Ершов",
			"Никитин",
			"Соболев",
			"Рябов",
			"Поляков",
			"Цветков",
			"Данилов",
			"Жуков",
			"Фролов",
			"Журавлёв",
			"Николаев",
			"Крылов",
			"Максимов",
			"Сидоров",
			"Осипов",
			"Белоусов",
			"Федотов",
			"Дорофеев",
			"Егоров",
			"Матвеев",
			"Бобров",
			"Дмитриев",
			"Калинин",
			"Анисимов",
			"Петухов",
			"Антонов",
			"Тимофеев",
			"Никифоров",
			"Веселов",
			"Филиппов",
			"Марков",
			"Большаков",
			"Суханов",
			"Миронов",
			"Ширяев",
			"Александров",
			"Коновалов",
			"Шестаков",
			"Казаков",
			"Ефимов",
			"Денисов",
			"Громов",
			"Фомин",
			"Давыдов",
			"Мельников",
			"Щербаков",
			"Блинов",
			"Колесников",
			"Карпов",
			"Афанасьев",
			"Власов",
			"Маслов",
			"Исаков",
			"Тихонов",
			"Аксёнов",
			"Гаврилов",
			"Родионов",
			"Котов",
			"Горбунов",
			"Кудряшов",
			"Быков",
			"Зуев",
			"Третьяков",
			"Савельев",
			"Панов",
			"Рыбаков",
			"Суворов",
			"Абрамов",
			"Воронов",
			"Мухин",
			"Архипов",
			"Трофимов",
			"Мартынов",
			"Емельянов",
			"Горшков",
			"Чернов",
			"Овчинников",
			"Селезнёв",
			"Панфилов",
			"Копылов",
			"Михеев",
			"Галкин",
			"Назаров",
			"Лобанов",
			"Лукин",
			"Беляков",
			"Потапов",
			"Некрасов",
			"Хохлов",
			"Жданов",
			"Наумов",
			"Шилов",
			"Воронцов",
			"Ермаков",
			"Дроздов",
			"Игнатьев",
			"Савин",
			"Логинов",
			"Сафонов",
			"Капустин",
			"Кириллов",
			"Моисеев",
			"Елисеев",
			"Кошелев",
			"Костин",
			"Горбачёв",
			"Орехов",
			"Ефремов",
			"Исаев",
			"Евдокимов",
			"Калашников",
			"Кабанов",
			"Носков",
			"Юдин",
			"Кулагин",
			"Лапин",
			"Прохоров",
			"Нестеров",
			"Харитонов",
			"Агафонов",
			"Муравьёв",
			"Ларионов",
			"Федосеев",
			"Зимин",
			"Пахомов",
			"Шубин",
			"Игнатов",
			"Филатов",
			"Крюков",
			"Рогов",
			"Кулаков",
			"Терентьев",
			"Молчанов",
			"Владимиров",
			"Артемьев",
			"Гурьев",
			"Зиновьев",
			"Гришин",
			"Кононов",
			"Дементьев",
			"Ситников",
			"Симонов",
			"Мишин",
			"Фадеев",
			"Комиссаров",
			"Мамонтов",
			"Носов",
			"Гуляев",
			"Шаров",
			"Устинов",
			"Вишняков",
			"Евсеев",
			"Лаврентьев",
			"Брагин",
			"Константинов",
			"Корнилов",
			"Авдеев",
			"Зыков",
			"Бирюков",
			"Шарапов",
			"Никонов",
			"Щукин",
			"Дьячков",
			"Одинцов",
			"Сазонов",
			"Якушев",
			"Красильников",
			"Гордеев",
			"Самойлов",
			"Князев",
			"Беспалов",
			"Уваров",
			"Шашков",
			"Бобылёв",
			"Доронин",
			"Белозёров",
			"Рожков",
			"Самсонов",
			"Мясников",
			"Лихачёв",
			"Буров",
			"Сысоев",
			"Фомичёв",
			"Русаков",
			"Стрелков",
			"Гущин",
			"Тетерин",
			"Колобов",
			"Субботин",
			"Фокин",
			"Блохин",
			"Селиверстов",
			"Пестов",
			"Кондратьев",
			"Силин",
			"Меркушев",
			"Лыткин",
			"Туров",
		};
		private static readonly string[] Positions =
		{
			"Директор",
			"Финансовый директор",
			"Главный бухгалтер",
			"Главный диспетчер",
			"Главный инженер",
			"Главный конструктор",
			"Главный металлург",
			"Главный метролог",
			"Главный механик",
			"Главный сварщик",
			"Главный специалист по защите информации",
			"Главный технолог",
			"Главный энергетик",
			"Директор гостиницы",
			"Директор котельной",
			"Директор по связям с инвесторами",
			"Директор типографии",
			"Заведующая машинописным бюро",
			"Заведующий архивом",
			"Заведующий бюро пропусков",
			"Заведующий жилым корпусом пансионата",
			"Заведующий камерой хранения",
			"Заведующий канцелярией",
			"Заведующий копировально-множительным бюро",
			"Заведующий научно-технической библиотекой",
			"Заведующий общежитием",
			"Заведующий производством",
			"Заведующий складом",
			"Заведующий столовой",
			"Заведующий фотолабораторией",
			"Заведующий хозяйством",
			"Заведующий экспедицией",
			"Заместитель директора по капитальному строительству",
			"Заместитель директора по коммерческим вопросам",
			"Заместитель директора по связям с общественностью",
			"Заместитель директора по управлению персоналом",
			"Корпоративный секретарь акционерного общества",
			"Мастер участка",
			"Менеджер",
			"Менеджер по персоналу",
			"Менеджер по рекламе",
			"Менеджер по связям с инвесторами",
			"Менеджер по связям с общественностью",
			"Начальник автоколонны",
			"Начальник гаража",
			"Начальник мастерской",
			"Начальник инструментального отдела",
			"Начальник исследовательской лаборатории",
			"Начальник лаборатории по организации труда и управления производством",
			"Начальник лаборатории социологии труда",
			"Начальник лаборатории технико-экономических исследований",
			"Начальник нормативно-исследовательской лаборатории по труду",
			"Начальник отдела автоматизации и механизации производственных процессов",
			"Начальник отдела информации",
			"Начальник отдела кадров",
			"Начальник отдела капитального строительства",
			"Начальник отдела комплектации оборудования",
			"Начальник отдела контроля качества",
			"Начальник отдела маркетинга",
			"Начальник отдела материально-технического снабжения",
			"Начальник отдела организации и оплаты труда",
			"Начальник отдела охраны окружающей среды",
			"Начальник отдела охраны труда",
			"Начальник отдела патентной и изобретательской работы",
			"Начальник отдела подготовки кадров",
			"Начальник отдела по связям с инвесторами",
			"Начальник отдела (лаборатории, сектора) по защите информации",
			"Начальник отдела по связям с общественностью",
			"Начальник отдела сбыта",
			"Начальник отдела социального развития",
			"Начальник отдела стандартизации",
			"Начальник планово-экономического отдела",
			"Начальник производственного отдела",
			"Начальник ремонтного цеха",
			"Начальник смены",
			"Начальник технического отдела",
			"Начальник финансового отдела",
			"Начальник хозяйственного отдела",
			"Начальник центральной заводской лаборатории",
			"Начальник цеха опытного производства",
			"Начальник юридического отдела",
			"Руководитель группы по инвентаризации строений и сооружений",
			"Администратор",
			"Аналитик",
			"Аудитор",
			"Аукционист",
			"Биржевой маклер",
			"Брокер",
			"Брокер торговый",
			"Бухгалтер",
			"Бухгалтер-ревизор",
			"Дилер",
			"Диспетчер",
			"Документовед",
			"Инженер",
			"Инженер-конструктор",
			"Инженер-лаборант",
			"Инженер по автоматизации и механизации производственных процессов",
			"Инженер по автоматизированным системам управления производством",
			"Инженер по защите информации",
			"Инженер по инвентаризации строений и сооружений",
			"Инженер по инструменту",
			"Инженер по качеству",
			"Инженер по комплектации оборудования",
			"Инженер по метрологии",
			"Инженер по надзору за строительством",
			"Инженер по наладке и испытаниям",
			"Инженер по научно-технической информации",
			"Инженер по нормированию труда",
			"Инженер по организации труда",
			"Инженер по организации управления производством",
			"Инженер по охране труда",
			"Инженер по патентной и изобретательской работе",
			"Инженер по подготовке кадров",
			"Инженер по подготовке производства",
			"Инженер по ремонту",
			"Инженер по стандартизации",
			"Инспектор по кадрам",
			"Инспектор по контролю за исполнением поручений",
			"Инспектор фонда",
			"Инструктор-дактилолог",
			"Консультант по налогам и сборам",
			"Лаборант",
			"Математик",
			"Методист по физической культуре",
			"Механик",
			"Оценщик",
			"Оценщик интеллектуальной собственности",
			"Переводчик",
			"Переводчик-дактилолог",
			"Переводчик синхронный",
			"Профконсультант",
			"Психолог",
			"Социолог",
			"Специалист по защите информации",
			"Специалист по кадрам",
			"Специалист по маркетингу",
			"Специалист по оценке соответствия лифтов требованиям безопасности",
			"Специалист по связям с инвесторами",
			"Специалист по промышленной безопасности подъемных сооружений",
			"Специалист по связям с общественностью",
			"Техник",
			"Техник-конструктор",
			"Техник-лаборант",
			"Техник по защите информации",
			"Техник по инвентаризации строений и сооружений",
			"Техник по инструменту",
			"Техник по метрологии",
			"Техник по наладке и испытаниям",
			"Техник по планированию",
			"Техник по стандартизации",
			"Техник по труду",
			"Техник-программист",
			"Техник-технолог",
			"Товаровед",
			"Транспортный экспедитор",
			"Физиолог",
			"Художник",
			"Шеф-инженер",
			"Экономист",
			"Экономист по планированию",
			"Экономист по сбыту",
			"Экономист по труду",
			"Экономист по финансовой работе",
			"Эксперт по оценке соответствия лифтов требованиям безопасности",
			"Эксперт",
			"Эксперт дорожного хозяйства",
			"Эксперт по промышленной безопасности подъемных сооружений",
			"Юрисконсульт",
			"Агент",
			"Агент коммерческий",
			"Агент по закупкам",
			"Агент по продаже недвижимости",
			"Агент по снабжению",
			"Агент рекламный",
			"Агент страховой",
			"Агент торговый",
			"Архивариус",
			"Ассистент инспектора фонда",
			"Дежурный бюро пропусков",
			"Делопроизводитель",
			"Инкассатор",
			"Калькулятор",
			"Кассир",
			"Кодификатор",
			"Комендант",
			"Коммивояжер",
			"Копировщик",
			"Крупье",
			"Машинистка",
			"Нарядчик",
			"Оператор диспетчерской движения и погрузочно-разгрузочных работ",
			"Оператор диспетчерской службы",
			"Оператор по диспетчерскому обслуживанию лифтов",
			"Секретарь-машинистка",
			"Секретарь незрячего специалиста",
			"Секретарь руководителя",
			"Секретарь-стенографистка",
			"Статистик",
			"Стенографистка",
			"Табельщик",
			"Таксировщик",
			"Учетчик",
			"Хронометражист",
			"Чертежник",
			"Экспедитор",
			"Экспедитор по перевозке грузов",
			"Ученый секретарь",
			"Главный научный сотрудник",
			"Ведущий научный сотрудник",
			"Старший научный сотрудник",
			"Научный сотрудник",
			"Младший научный сотрудник",
			"Заведующий аспирантурой",
			"Заведующий отделом стандартизации",
			"Заведующий отделом научно-технической информации",
			"Заведующий планово-экономическим отделом",
			"Заведующий отделом кадров",
			"Заведующий техническим архивом",
			"Заведующий фотолабораторией",
			"Ведущий инженер",
			"Ведущий экономист",
			"Инженер",
			"Экономист",
			"Переводчик",
			"Художник",
			"Техник",
			"Лаборант",
			"Главный конструктор проекта",
			"Главный инженер проекта. Главный архитектор проекта",
			"Главный ландшафтный архитектор проекта",
			"Заведующий конструкторским отделом",
			"Заведующий чертежно-копировальным бюро",
			"Ведущий конструктор",
			"Инженер-проектировщик",
			"Архитектор",
			"Ландшафтный архитектор",
			"Техник-проектировщик",
			"Чертежник-конструктор",
			"Руководитель подразделения",
			"Главный редактор",
			"Научный редактор",
			"Редактор",
			"Технический редактор",
			"Художественный редактор",
			"Выпускающий",
			"Младший редактор",
			"Корректор",
		};

		private static readonly string[] Companies =
		{
			"Сабона Плюс",
			"Арт-Комплект",
			"Металлиндустрия",
			"Ресурс-Капитал",
			"Торговый дом \"Вектор\"",
			"Торговый дом \"Уралкварц\"",
			"Оникс",
			"Ремстройсервис",
			"МедиаСервис",
			"Аргумент",
			"Прайм-Информ",
			"О Г М",
			"НПП Модус-М",
			"Стройтехносфера",
			"Промснаб",
			"Элегия",
			"Интра-Трейд",
			"Производственная компания \"УралВагонМеханика\"",
			"Торговый Дом \"Шина\"",
			"Строй-Астер",
			"Автодиск",
			"Торгово-производственное предприятие \"Черметопторг\"",
			"Омега",
			"ЭКСИМ",
			"Троица",
			"МЕТПРОМСЕРВИС",
			"Уральская Ассоциация Клининга",
			"Рекламное обеспечение бизнеса",
			"Вектор",
			"Ривьера",
			"Рекламное агентство \"Радуга\"",
			"Промышленная безопасность",
			"СтройТрансАвто",
			"ЕвроТорг",
			"ТрансСервисВосток",
			"МонтажСтройИнвест",
			"Промторгснаб",
			"Уралсервис - опт",
			"Бетстрой",
			"Лига",
			"АВ-Маркет",
			"Торговый Дом \"Альянс\"",
			"Снабкомплект",
			"Золотой скорпион",
			"Приам",
			"Строительная Компания \"Альянс\"",
			"Строительная Компания \"ЭраСтрой\"",
			"Торгово-развлекательный центр \"Урал\"",
			"Веста",
			"ТеплоЭнергоСтрой",
			"Трубметком",
			"Профи",
			"Урал-Альянс",
			"Универсал-Снаб",
			"Крокус",
			"Андромеда",
			"Салма",
			"Маяк",
			"Гамма-Урал",
			"Вегус",
			"МИТМ",
			"Альянс",
			"ВЭЛТКОМ",
			"Домком",
			"Лига-Кэпитал",
			"Спецпром",
			"ТИСС",
			"Механизированная колонна-12",
			"РЕАЛКОМ",
			"РЕАЛКОМ-ЕК",
			"Уралметторг",
			"Аква-Трейд",
			"Торг Сервис",
			"Орикс",
			"Лэтос",
			"МВК",
			"Торговый двор \"ПАТРИОТ\"",
			"Торговый двор \"Строитель\"",
			"Среднерусский центр спортивного ориентирования",
			"РУСИЧЬ",
			"Монтажник-2",
			"Платановая аллея",
			"Усольский Художник",
			"ПАТРИОТ",
			"Луч - 7",
			"Исток",
			"ДАНИЛЫЧ",
			"Игл",
			"Нэвис+",
			"фирма Стройсервис",
			"ЭМО",
			"ЛенСтройТоргСервис",
			"КЛИНЛЭНД",
			"МЕЦЕНАТ",
			"АЛЕТЕКС \"ALETEX\"",
			"Научно-производственное коммерческое предприятие \"КВАДРО\"",
			"Гигабит",
			"Торгово-Промышленная Компания \"Кубань Ксилолит\"",
			"АВТЕКС-ГРУПП",
			"Рыбокомбинат \"Волгоградский\"",
			"Регион Бизнес Альянс",
			"СТРОЙРЕАЛПРЕСТИЖ",
			"КОМПАНИЯ АРВЕСТ",
			"ЖБИ Сервис",
			"Реал - НН",
			"Бар-С",
			"Проспект-В",
			"Драйзэн",
			"ВОК - 72",
			"Торговый дом \"Лагуна\"",
			"Уралторг",
			"ГрафГаз",
			"Альянс",
			"Регионсерия",
			"Центр",
			"Срочная Американская Экспресс чистка",
			"АйСиком мастер ",
			"МАШТЕХПРОДУКТ",
			"Клин Ленд",
			"Астроник",
			"Уралнефтьсервис",
			"Механическая производственная компания \"МЕХАНИК\"",
			"Стелла",
			"Новые Решения",
			"Торговый Дом \"Волжский Капитал\"",
			"ВИТНА ",
			"Ореол С",
			"Фирма \"НВЛ\"",
			"Орлов и Компания",
			"Министерство",
			"ГрандАвто",
			"ВариантСтрой",
			"Урал-Торг",
			"Металлинвест",
			"АБСТехно",
			"Декарт",
			"Орион",
			"ДОГОДА",
			"Горизонт",
			"Забота",
			"ТРАНСМЕХ",
			"Элана",
			"Водоканал",
			"Барс",
			"Спецторг",
			"Рыбацкая деревня",
			"НАУЧНО-ПРОИЗВОДСТВЕННОЕ ОБЪЕДИНЕНИЕ \"ЭЛЕКТРОМАШ\"",
			"ГАРАЖНЫЙ КООПЕРАТИВ \"ТОМЬ\"",
			"Палкинский",
			"Управдом",
			"Тёплый Дом",
			"Чаплыгинский",
			"Опытно-Механический завод",
			"ТЕЗА-ВН",
			"Теза-Н",
			"ЛУЧ-3",
			"Автотехсервис",
			"Дельта-С",
			"Мединфос",
			"Кентавр",
			"Техцентр",
			"Петровские дачи",
			"ЭнергоАктив",
			"Унимерьская слобода",
			"Гольдберг-Софт",
			"ВИКТОРИЯ-Л",
			"Энергетик",
			" ВЫМПЕЛ ",
			"Призма",
			"А-Я",
			"Загородный 45",
			"БСУ",
			"Академия Бильярда",
			"ТОВАРИЩЕСТВО СОБСТВЕННИКОВ ЖИЛЬЯ \"14-Б\"",
			"Эскорт-медиа",
			"Паритет",
			"Продвижение",
			"Дельта",
			"Строй-Альянс",
			"Интерком",
			"АКСЕЛЬ",
			"Финпромснаб",
			"Кит",
			"Холдинговая Компания \"Финпромснаб\"",
			"Холдинговая Компания \"Паритет\"",
			"Холдинговая Компания \"Строй-Альянс\"",
			"Холдинговая Компания \"ПЕРЕСВЕТ\"",
			"Рекаунт",
			"Адамант",
			"Лаксар",
			"Эдельвейс",
			"Еврокласс-Урал",
			"Инстрэл",
			"Лес-Пром",
			"СтройМатериалы",
			"Нивад",
			"Альянс 2002",
			"Вспомогательное производство \"Тритон\"",
			"Вспомогательное производство \"Лес-Пром\"",
			"Вспомогательное производство \"Фарфора Сысерти\"",
			"Авианта",
			"Астон Консалтинг",
			"Тритон",
			"БЕСТ",
		};
		private static readonly string[] ProjectCompanies = Companies
			.Where(c => c.Contains("\"")).ToArray();//с ковычками более "громкие" названия
		private static readonly string[] ObjectCompanies = Companies
			.Where(c => !c.Contains("\"")).ToArray();
		private static readonly string[] Addresses =
		{
			"Авангардная ул.",
			"Большая Воскресенская ул.",
			"Большая Комсомольская ул.",
			"б-р Космонавтов",
			"Видная ул.",
			"Вокзальная ул.",
			"Волоколамское шоссе",
			"Дачная ул.",
			"Железнодорожная ул.",
			"Железнодорожный пер.",
			"Железнодорожный пр-д",
			"Живописная набережная",
			"Заводская ул.",
			"Зеленая ул.",
			"Зеленый 1-й пер.",
			"Знаменская ул.",
			"Ильинский б-р",
			"Ильинское шоссе",
			"Калининская ул.",
			"Комсомольская ул.",
			"Комсомольский 1-й пер.",
			"Комсомольский 2-й пер.",
			"Крайняя ул.",
			"Красногорский б-р",
			"Лесная ул.",
			"Малая Северная ул.",
			"Международная ул.",
			"Микрорайон Опалиха",
			"Молодежная ул.",
			"Москворецкий б-р",
			"Московская ул.",
			"Новая ул.",
			"Новоархангельская ул.",
			"Октябрьская ул.",
			"Оптический пер.",
			"Оптический пр-д",
			"Оранжерейная ул.",
			"ул. 50 лет Октября",
			"ул. Братьев Горожанкиных",
			"ул. Вилора Трифонова",
			"ул. Георгия Димитрова",
			"ул. Губайлово",
			"ул. Жуковского",
			"ул. Игната Титова",
			"ул. Игоря Мерлушкина",
			"ул. им Головкина",
			"ул. им Егорова",
			"ул. им Зверева",
			"ул. Карбышева",
			"ул. Кирова",
			"ул. Королева",
			"ул. Красная Горка",
			"ул. Ленина",
			"ул. Маяковского",
			"ул. Мичурина",
			"ул. Народного Ополчения",
			"ул. Новая Слободка",
			"ул. Оптиков",
			"ул. Осипенко",
			"ул. Островского",
			"ул. Павшино в/г",
		};
		#endregion

		public event EventHandler<ProgressEventArgs> Progress;

		public void CreateDataBase(DbContext db)
		{
			var baseDir = AppDomain.CurrentDomain.BaseDirectory;
			db.Execute("CREATE DATABASE [Furmanov] ON PRIMARY " +
					   "(NAME = [Furmanov], " +
					   $"FILENAME = '{Path.Combine(baseDir, "Furmanov.mdf")}', " +
					   "SIZE = 2MB, MAXSIZE = 10MB, FILEGROWTH = 10%) " +
					   "LOG ON (NAME = Furmanov_Log, " +
					   $"FILENAME = '{Path.Combine(baseDir, "Furmanov.ldf")}', " +
					   "SIZE = 1MB, " +
					   "MAXSIZE = 5MB, " +
					   "FILEGROWTH = 10%)");

			db.CreateTable<RoleDto>();
			db.CreateTable<UserDto>();
			db.CreateTable<ObjectDto>();
			db.CreateTable<ProjectDto>();
			db.CreateTable<EmployeeDto>();
			db.CreateTable<SalaryPayDto>();
			db.CreateTable<WorkedDayDto>();

			var tables = new[]
			{
				nameof(RoleDto),
				nameof(UserDto),
				nameof(ObjectDto),
				nameof(ProjectDto),
				nameof(EmployeeDto),
				nameof(SalaryPayDto),
				nameof(WorkedDayDto)
			};
			foreach (var table in tables)
			{
				try
				{
					var tableName = table.Replace("Dto", "");
					db.Execute($"ALTER TABLE [dbo].[{tableName}] " +
							   $"ADD CONSTRAINT [DF_{tableName}_{nameof(Dto.CreatedDate)}] " +
							   $"DEFAULT (getdate()) FOR [{nameof(Dto.CreatedDate)}]\n" +
							   "GO");
				}
				catch { }
			}
		}
		public void RefillDataBase(DbContext db)
		{
			#region Очистка базы данных
			db.Delete<WorkedDayDto>();
			db.Delete<SalaryPayDto>();
			db.Delete<EmployeeDto>();
			db.Delete<ObjectDto>();
			db.Delete<ProjectDto>();
			db.Delete<UserDto>();
			//db.Delete<RoleDto>(); 
			#endregion

			var year = 2019;

			#region Добавление юзеров
			var users = new List<UserDto>();
			List<UserDto> Add(Role role, int count)
			{
				var res = new List<UserDto>();
				var needDebugUser = !users.Any(u => u.Login == role.ToString());
				if (needDebugUser)
				{
					var debugUser = new UserDto
					{
						Login = role.ToString(),
						Name = role.ToString(),
						Role = role,
						Password = "1"
					};
					debugUser.Id = db.InsertWithInt32Identity(debugUser);
					res.Add(debugUser);
				}
				for (int i = 0; i < (needDebugUser ? count - 1 : count); i++)
				{
					var user = GenUser(role);
					user.Id = db.InsertWithInt32Identity(user);
					res.Add(user);
				}
				users.AddRange(res);
				return res;
			}

			Add(Role.Admin, 2);
			Add(Role.Director, 3);
			Add(Role.ProjectManager, 5);
			#endregion

			var projectManagers = users.Where(u => u.Role == Role.ProjectManager).ToArray();
			Progress?.Invoke(this, new ProgressEventArgs(1, projectManagers.Length + 1));

			var projectsNames = new List<string>();
			for (var prManNum = 0; prManNum < projectManagers.Length; prManNum++)
			{
				var projManager = projectManagers[prManNum];
				var projectCount = _rnd.Next(3, 4);
				for (int i = 0; i < projectCount; i++)
				{
					var objectsNames = new List<string>();
					var proj = GenProject(projManager.Id);
					while (projectsNames.Any(name => name == proj.Name))
					{
						if (projectsNames.Count >= ProjectCompanies.Length) return;
						proj = GenProject(projManager.Id);
					}

					projectsNames.Add(proj.Name);
					proj.Id = db.InsertWithInt32Identity(proj);
					Add(Role.Manager, _rnd.Next(2, 5)).ForEach(manager =>
					{
						var objCount = _rnd.Next(2, 4);
						for (int j = 0; j < objCount; j++)
						{
							var obj = GenObject(proj.Id, manager.Id);
							while (objectsNames.Any(name => name == obj.Name))
							{
								if (objectsNames.Count >= ObjectCompanies.Length) return;
								obj = GenObject(proj.Id, manager.Id);
							}

							objectsNames.Add(obj.Name);
							obj.Id = db.InsertWithInt32Identity(obj);
							var empCount = _rnd.Next(5, 15);
							for (int k = 0; k < empCount; k++)
							{
								var emp = GenEmployee();
								emp.Id = db.InsertWithInt32Identity(emp);
								for (int month = 1; month <= 12; month++)
								{
									var pay = GenSalaryPay(year, month, obj.Id, emp);
									pay.Id = db.InsertWithInt32Identity(pay);
									var workedDays = GenWorkedDays(year, month, pay);
									pay.RateDays = workedDays.Length;
									workedDays = workedDays.Where(d => _rnd.Next(1000) < 950).ToArray();
									pay.FactDays = workedDays.Length;
									db.BulkCopy(workedDays);
									CalcSalary(pay, emp.Salary);
									db.Update(pay);
								}
							}
						}
					});
					Progress?.Invoke(this, new ProgressEventArgs(prManNum + 1, projectManagers.Length + 1));
				}
			}
		}

		private static WorkedDayDto[] GenWorkedDays(int year, int month, SalaryPayDto pay)
		{
			var days = DateService.AllDaysInMonth(year, month)
					.Where(date => date.DayOfWeek != DayOfWeek.Saturday &&
								   date.DayOfWeek != DayOfWeek.Sunday)
					.Select(day => new WorkedDayDto
					{
						SalaryPay_Id = pay.Id,
						Date = day,
					}).ToArray();
			return days;
		}

		private UserDto GenUser(Role role)
		{
			var user = new UserDto
			{
				Name = GenName(),
				Role = role,
				Password = "1"
			};

			var names = user.Name.Split(' ');
			user.Login = $"{names[0][0]}.{names[1]}".ToEn();

			var random = _rnd.Next(1000);
			var mail = random < 300 ? "mail.ru"
				: random < 700 ? "gmail.com"
				: "yandex.ru";

			user.Email = $"{user.Login}@{mail}";

			return user;
		}
		private string GenName()
		{
			var name = Names[_rnd.Next(Names.Length)];
			var surname = Surnames[_rnd.Next(Surnames.Length)];
			return $"{name} {surname}";
		}

		private EmployeeDto GenEmployee()
		{
			var employee = new EmployeeDto
			{
				Name = GenName(),
				Position = Positions[_rnd.Next(Positions.Length)],
				Card = $"{Num4} {Num4} {Num4} {Num4}",
				Phone = $"8(9{Num2})-{Num3}-{Num2}-{Num2}",
				Salary = _rnd.Next(3, 40) * 5000,
			};

			return employee;
		}
		private string Num2 => $"{_rnd.Next(99):00}";
		private string Num3 => $"{_rnd.Next(999):000}";
		private string Num4 => $"{_rnd.Next(9999):0000}";

		private ProjectDto GenProject(int projectManagerId)
		{
			var project = new ProjectDto
			{
				Name = ProjectCompanies[_rnd.Next(ProjectCompanies.Length)],
				ProjectManager_Id = projectManagerId,
			};
			return project;
		}
		private ObjectDto GenObject(int projectId, int managerId)
		{
			var obj = new ObjectDto
			{
				Name = ObjectCompanies[_rnd.Next(ObjectCompanies.Length)],
				Address = Addresses[_rnd.Next(Addresses.Length)] + $", {_rnd.Next(100)}",
				Project_Id = projectId,
				Manager_Id = managerId,
			};
			return obj;
		}

		private SalaryPayDto GenSalaryPay(int year, int month, int objId, EmployeeDto emp)
		{
			var pay = new SalaryPayDto
			{
				Object_Id = objId,
				Employee_Id = emp.Id,
				Year = year,
				Month = month,
				Advance = emp.Salary * 0.4m,
			};

			if (_rnd.Next(1000) < 100)
			{
				pay.Penalty = _rnd.Next(1, 4) * 500;
				pay.Comment = "Опоздание";
			}
			if (_rnd.Next(1000) < 100)
			{
				pay.Premium = emp.Salary * 0.1m;
			}

			return pay;
		}

		private void CalcSalary(SalaryPayDto pay, decimal salary)
		{
			pay.SalaryToPay = salary / pay.RateDays * (pay.FactDays ?? 0)
							  - (pay.Advance ?? 0)
							  - (pay.Penalty ?? 0)
							  + (pay.Premium ?? 0);
		}
	}
}
